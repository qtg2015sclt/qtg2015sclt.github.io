---
layout: post
title: "Core Data Programming Guide中文版（能坚持翻译到哪一部分我也不知道，目前状态：坑）"
date: 2017-05-13 21:23:18 +0800
comments: true
categories: iOS
tags: iOS
keywords: iOS
---
> 废话：挖坑，不知道什么时候能填完（或者还能不能填完了）。先坑着。  
为了学习开始搞起翻译，水平非常烂，欢迎指教。  
""内是不知道该怎么翻的

## 开始
### Core Data是什么？
Core Data是一个框架，用来在自己的应用中管理模型层对象（model layer objects）。对那些涉及对象生命周期和对象图表管理（包括持久化）的一般任务，它提供了广泛而自动的解决方案。
<!--more-->
Core Data能减少为了支持模型层而写的百分之50至70的代码量。这主要是因为以下内建特性，而不需要人工去实现、测试并优化了：
    - 改变了撤销与重做的追踪和内建管理，而不只是基本的文本编辑。
    - 维护了改变的传播，包括对象间关系一致性的维护。
    - 对象的懒加载，"部分的已实现未来（缺点）"，并使用写时复制数据共享的方式来减少开销。
    - 适合数值的自动认可。管理的对象扩展了标准键值编码的认可方法来确保个体数值落在可接受范围内，因此能使值的组合具有意义。
    - 模式迁移工具简化了模式的变化并可以高效地进行就地模式迁移。
    - 应用控制层的可选整合来支持用户界面的同步。
    - 在内存和用户界面中分组、过滤及组织数据。
    - 在外部数据仓库中存储对象的自动化支持。
    - 复杂的查询编译。不需要写SQL语句，可以通过使用读取请求来连接一个NSPredicate对象，以此进行复杂的查询。
    - 使用版本追踪和乐观锁来支持自动的多写冲突的解决。
    - 有效整合了macOS和iOS的工具链。
> NOTE  
为了方便和明确，本文档使用了一个雇员的数据库式的例子。它代表了一个丰富而容易理解的问题域。但是，Core Data框架并不限制于数据库式或者C/S行为的应用。这个框架和矢量图应用的基础一样有用，比如Skech或者像Keynote这样的演示应用。

### 创建一个托管对象模型（Managed Object Model）

-TBC-
