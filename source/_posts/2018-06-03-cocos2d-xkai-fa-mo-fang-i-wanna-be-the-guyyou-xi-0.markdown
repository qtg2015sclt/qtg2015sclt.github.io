---
layout: post
title: "cocos2d-x开发模仿I Wanna Be The Guy游戏-0"
date: 2018-06-03 01:24:02 +0800
comments: true
categories: I-Wanna-Be-The-Guy
tags: GameDevelop cocos2d-x
keywords: cocos2d-x game IWBTG
---
*之前的坑还没填完我又开新的，作死小能手就是我。反正债多了不愁。希望能赶紧把之前的填完，算了，还是不立flag了。*

**Warning：正文从下篇开始，本篇全文瞎扯（并不**

## 一点废话
开始用cocos2d-x自己动手开发游戏了，并不打算立刻就创新个游戏（其实是我苦思冥想绞尽乳汁也没想出来，而且想出来也未必有能力做出来），先做个模仿吧，想到i wanna be系列游戏那就它了吧，因为看得多也摸过相对熟悉模仿起来顺手，这个系列又可以做出很简单的关卡适合新手的我进行尝试。

目前就先写个耐久boss上手，因为可以足够简单地开始，也可以变得较为复杂，适合由浅入深地进行学习和开发。
<!--more-->
## 关于游戏开发
个人才疏学浅咸鱼一条，对游戏开发的相关的一点知识简单说下自己的了解，说得不对的地方，欢迎指教，以便我提高姿势水平。

游戏平台：主机、PC、移动端，内部又有细分，像ps、xbox啊，Windows、linux啊，iOS、Android啊。

我个人关注移动端多一些，所以相关的了解也就会偏一些：
我自己打算摸一下的游戏引擎有这三个：unreal，Unity，cocos2d-x；
有些团队使用自己研发的引擎；
因为了解过一点iOS开发，所以也顺便了解了一点点苹果的原生框架SpriteKit。

unreal和Unity目前还没动手碰过，就SpriteKit和cocos2d-x对于我这个初学狗来说，挺像的，也许毕竟游戏开发的套路就是这样吧，所以大胆猜测一下：熟悉了一款之后再玩别的估计会容易些，和学语言差不多吧，但是想要深入就比较难吧。
我目前选了cocos2d-x没选SpriteKit是因为前者跨平台；三大主流中没选unreal因为之前只熟悉iOS开发所以偏向做手游，据说手游团队相对较少用unreal（因为授权问题？）；剩下两个随便挑一个那就cocos2d-x吧。

## 关于游戏引擎
如果你从来、从来没有接触过游戏开发，不知道为什么游戏开发一般都是要用游戏引擎的话，这里稍微解释一下。

Q：不用游戏引擎写个游戏行吗？
A：行，当然行，但所有的渲染、动画、物理等等你都要自己写，如果是个简单的小游戏当然可以，如果有目的做复杂一些的游戏或者是团队合作，还是要用游戏引擎。

Q：初学者选哪款？
A：这绝对可以入选任何领域入门的十大死亡问题之一，估计还能高居前列。比如：选哪个语言？选哪本书？哪个老师讲得好些？……
这个问题重要吗？也许挺重要，可能会决定你接下来的选择走向。
但，也没那么重要，听别人说你是得不到答案的，稍微了解下有哪些选择，自己去体验就好了。

选哪本书？都翻一翻，喜欢哪本、哪本能看懂、能看下去、看了能学到东西就选哪本。
学哪门语言？先上手学个一门，之后后再入门别的就快得很（当然只是入门）。
选哪个游戏引擎？自己想做什么平台的游戏，这个平台哪款游戏引擎较为主流优先选，跟自己熟悉或者喜欢的语言匹配的优先选，学起来简单的优先选……如果玩了一阵觉得不爱就再换啊，多试几个就知道该选哪个了，给自己一个决定的缓冲时间。

Q：游戏引擎到底是什么鬼？
A：个人理解就是个工具箱，把那些和游戏逻辑没那么相关但又必须有的东西抽出来放一起，方便你用，脏活累活它干了，你只要操心自己的游戏业务逻辑就行。就好比你要画画不需要自己先制作颜料，买了直接用就可以。

## 前提条件
1. 开发设备。
2. 根据自己选的游戏引擎，先对要使用的语言有个基础应用能力，这是最最基本的，如果一点计算机语言都不懂的话想要做个游戏，推荐 RPG Maker 这种，或者先去把语言学了。
别的……好像真没啥要求了。反正暂时没想到，至少其他都不是硬要求了，什么对游戏要有了解要有爱啊这种（废话，没爱也不会想做游戏开发了）。

## 动手前的准备工作
假设已经满足了前提条件，准备工作简单来说就两点（也基本上是学习任何技术的方式？）：
1. 看guide，看文档
2. 抄例子

看guide是要对该游戏引擎有个大致了解，都有哪些部件，起什么作用，在心里建立个大致的框架出来，顺便可以思考下平时见到的游戏都运用了哪些部件。
抄例子就是为了直观感受，毕竟看文档太抽象，游戏开发还是要写代码的，抄别人或者官方的例子实际地去应用一下之前看到的概念，免得一脑子概念混在一团也不知道都干嘛用的。
这两个可以交替着来，看看文档抄抄代码，代码不懂的地方去看文档，文档无法理解的时候去抄个相应的应用。

什么时候可以开始动手自己尝试游戏开发了呢？我个人的一点想法就是：当你对要开发/模仿的游戏有个构思之后，能够大致了解自己要用什么组件去实现，不需要很细节，知道该找哪个来用就行，这时就可以开始动手实现自己的想法了。

## 开工！
到这一步就可以动手了！开不开心？激不激动？我是很开心的，感觉自己马上就能做出个小游戏，实现人生理想的第一步了呢。就先来个kid大战miku，一个耐久boss战，要素我都熟悉，还不是分分钟搞定~
虽然工作日只有一两个小时能用来做游戏，但我觉得周末多搞搞，预计一周也能搞个粗糙能用版出来了吧。
然后我就扑了——为什么已经经受过无数教训的我还是如此不长记性？计划中永远是会高估自己的，途中总是有各种没料到的难题的，时间是不够用的，而我是傻的（手动再见.png）。

-FIN-
