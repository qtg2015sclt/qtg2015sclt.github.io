<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | 风怜目尽无疆地s's Space]]></title>
  <link href="http://www.fenglians.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.fenglians.com/"/>
  <updated>2018-03-16T22:13:10+08:00</updated>
  <id>http://www.fenglians.com/</id>
  <author>
    <name><![CDATA[风怜目尽无疆地s]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 多线程相关... To Be Continued...]]></title>
    <link href="http://www.fenglians.com/blog/2018/03/16/iosduo-xian-cheng-xiang-guan/"/>
    <updated>2018-03-16T20:31:16+08:00</updated>
    <id>http://www.fenglians.com/blog/2018/03/16/iosduo-xian-cheng-xiang-guan</id>
    <content type="html"><![CDATA[<blockquote>
  <p>小声逼逼: 好久（一年）不写 blog 了, 为什么又写起来了呢, 因为今天接了个突然袭击的电话面试, 然后被问到懵逼… 其实问的并不难都能聊两句但是都不太懂, 是我自己太渣. 想想自己这实习的大半年, 都没啥长进, 好伤心QAQ. 面试官的建议是, 多思考多总结. 真的很感谢, 要不是这个面试, 不知道我还要飘到什么时候去… 我运气真好.<br />
先来总结一点多线程相关的东西, 欢迎指正</p>
</blockquote>

<h2 id="进程与线程的区别">进程与线程的区别</h2>

<ul>
  <li>
    <p>进程是资源分配的最小单元, 线程是程序执行的最小单元.</p>
  </li>
  <li>
    <p>每个线程都运行在进程的上下文中, 共享同样的代码和全局数据. <em>所以线程天然地就具有能够更为方便的共享数据的优点啊, 但也容易引发线程安全上的问题</em></p>
  </li>
</ul>

<!--more-->

<ul>
  <li>
    <p>进程切换需要切换上下文, 而线程由于共享了进程的上下文, 切换线程并不会切换上下文.</p>
  </li>
  <li>
    <p>进程有自己的地址空间, 而线程没有, 线程必须依赖进程而存在. 线程有自己的栈和栈指针.</p>
  </li>
  <li>
    <p>待补充…</p>
  </li>
</ul>

<h2 id="ios-中的多线程技术-简介">iOS 中的多线程技术 简介</h2>
<blockquote>
  <p>我只用过 GCD, 听说过 NSThread, 其他两个…</p>
</blockquote>

<ol>
  <li>Pthreads</li>
  <li>NSThread</li>
  <li>GCD</li>
  <li>NSOperation &amp; NSOPerationQueue</li>
</ol>

<h3 id="pthreads">Pthreads</h3>
<p>即 POSIX Threads, 一套通用线程库, 在类 Unix 操作系统中都使用它作为操! 作! 系! 统!的线程. <em>可以说非常厉害了呢, 但也就非常底层</em><br />
基于 C语言 的框架, 定义了一整套如何创建和操纵线程的 API. <em>swift 写多了看 C 会想吐吧. 我写 C 的时候到没有想吐, 但看到 OC 是很 feel sick 了</em></p>

<p><em>不多说 Pthreads 了, 真正 iOS 开发中应该基本不会用到, 列个参考在后面, 需要看的时候去看一下</em></p>

<h3 id="nsthread">NSThread</h3>

<p>苹果把 POSIX Threads 封装了, 变成面向对象的, 一个线程一个对象, 就可以直接操控线程对象. 但依然很难用, 所有的线程活动都需要自己手动管理.</p>

<p><em>所以用的时候就是很 OC 地先创建一个对象, 然后调用启动线程的方法.</em></p>

<h2 id="参考">参考</h2>
<ol>
  <li><a href="https://www.jianshu.com/p/0b0d9b1f1f19">关于iOS多线程，你看我就够了</a></li>
  <li><a href="https://computing.llnl.gov/tutorials/pthreads/">POSIX Threads Programming</a></li>
  <li><a href="https://www.ibm.com/developerworks/cn/linux/thread/posix_thread1/index.html">POSIX 线程详解</a></li>
  <li><a href="https://segmentfault.com/a/1190000006612189">iOS多线程总结</a></li>
</ol>

<p>-TBC-</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[工程实践kiwiCam的进展记录...（已坑）]]></title>
    <link href="http://www.fenglians.com/blog/2017/05/17/gong-cheng-shi-jian-kiwicamde-jin-zhan-ji-lu/"/>
    <updated>2017-05-17T21:42:54+08:00</updated>
    <id>http://www.fenglians.com/blog/2017/05/17/gong-cheng-shi-jian-kiwicamde-jin-zhan-ji-lu</id>
    <content type="html"><![CDATA[<blockquote>
  <p>工程实践进展不下去了，打算参照一个开源项目重新规划重新来过。  <br />
持续更新吧，最近就搞这个了。<br />
加粗是待填的坑。   <br />
警告：大部分内容都是个人猜测，是记录给自己看的，除此以外不具备任何参考性。</p>
</blockquote>

<p><em>最近开了门课天天要上课写作业，没时间写工程实践；而且鉴于之前效率不够高，我要换个方案了……</em></p>

<!--more-->

<ul id="markdown-toc">
  <li><a href="#20170515-present" id="markdown-toc-20170515-present">2017.05.15-present</a>    <ul>
      <li><a href="#home-group" id="markdown-toc-home-group">home group</a>        <ul>
          <li><a href="#controller" id="markdown-toc-controller">Controller</a></li>
          <li><a href="#view" id="markdown-toc-view">View</a></li>
        </ul>
      </li>
      <li><a href="#launchscreenstoryboard和mainstoryboard" id="markdown-toc-launchscreenstoryboard和mainstoryboard">LaunchScreen.storyboard和Main.storyboard</a></li>
      <li><a href="#infoplist" id="markdown-toc-infoplist">info.plist</a></li>
    </ul>
  </li>
  <li><a href="#20170513--20170514" id="markdown-toc-20170513--20170514">2017.05.13 &amp; 2017.05.14</a>    <ul>
      <li><a href="#新建group以及文件" id="markdown-toc-新建group以及文件">新建group以及文件</a></li>
      <li><a href="#global文件夹" id="markdown-toc-global文件夹">Global文件夹</a></li>
      <li><a href="#关于core-data" id="markdown-toc-关于core-data">关于core data</a></li>
    </ul>
  </li>
  <li><a href="#20170509" id="markdown-toc-20170509">2017.05.09</a>    <ul>
      <li><a href="#对开源项目capture的分析" id="markdown-toc-对开源项目capture的分析">对开源项目Capture的分析</a></li>
      <li><a href="#目前的计划" id="markdown-toc-目前的计划">目前的计划</a></li>
    </ul>
  </li>
</ul>

<h1 id="20170515-present">2017.05.15-present</h1>
<p><em>一个题外：我只是想给文章插个目录而已，atom上装package生成的toc是不能在网站上显示出来的（事实上我都没能调出来，难道markdown和md后缀不同么……），不废话了，参考这篇：<a href="http://blog.javachen.com/2015/06/30/jekyll-kramdown-config.html">Jekyll kramdown配置 </a></em></p>
<h2 id="home-group">home group</h2>
<h3 id="controller">Controller</h3>
<p>按照Capture稍微修改了一下<code>HomeViewController</code>，对有疑问的地方想模拟一下来比较试试。（用真机模拟的时候……居然手机上的系统版本太高要更新xcode。）</p>
<pre><code class="language-swift">self.navigationController?.setNavigationBarHidden(true, animated: false)
</code></pre>
<ol>
  <li>
    <p>之前不是给<code>HomeViewController</code>添加了个<code>NavigationControllerScene</code>吗，所以猜测这句话是隐藏导航Bar的，于是试了一下，果然写上这句上面那个导航Bar就不见了。那为什么还要添加Navigation呢？<strong>一个猜测：大约是后面有些功能需要（比如修图的时候用到的「返回」啊「下一步」啊什么的）。</strong></p>
  </li>
  <li>
    <p>加上「?」是指是可选类型，也就是说可能有<code>NavigationController</code>，也可能没有（为nil）。猜测：如果有的话就使用「.」之后的这个方法，如果为空就不调用这个方法。</p>
  </li>
</ol>

<h3 id="view">View</h3>
<ol>
  <li>
    <p>创建文件<code>MainScrollView.swift</code>，并不是现有的<code>HomeView.swift</code>，应该是后来改名了。翻了一下commit，本来创建的是一个<code>UIScrolView</code>，后来删掉改成了<code>UIView</code>，所以我就直接写后者吧。（<strong>关于滚动视图和View的区别，还有待继续了解。</strong>）</p>
  </li>
  <li>新建的<code>HomeView</code>继承了UIView，但后面还有一个<code>UIScrollViewDelegate</code>，<strong>是多继承吗？以及这个Delegate又是起到了哪些作用？</strong>  <br />
因为之前只了解了swift的一点点基础语法，趁此机会去了解一下类相关的，参考<a href="http://wiki.jikexueyuan.com/project/swift/chapter2/09_Classes_and_Structures.html">类和结构体</a>。
    <blockquote>
      <p>提到了命名方式，<code>UpperCamelCase</code>和<code>lowerCamelCase</code>，我以前还没有注意过，以后写代码的时候注意。  <br />
类实例没有结构体的默认成员逐一构造器。  <br />
结构体和枚举是值类型（基本类型都是值类型）：被赋予或传递时，会拷贝值。  <br />
而类是引用类型。关于声明一个常量引用却可以更改其属性，我的理解是就想cpp里的常指针<code>int * const p = a</code>，不能改的是其指向，而指向的内容可变。</p>
    </blockquote>
  </li>
  <li>
    <p><code>override init</code>是由于HomeView类是UIView的子类，需要重写父类的init函数，……其他参考<a href="http://huizhao.win/2016/11/13/swift-init/">从 Swift 初始化说起 </a>。还有版本变化的问题，也要相应地进行改写。</p>
  </li>
  <li>
    <p>声明为<code>CGFloat!</code>，<del>为什么不是Float？</del> 参考<a href="http://stackoverflow.com/questions/1264924/whats-the-difference-between-using-cgfloat-and-float">What’s the difference between using CGFloat and float?</a> <strong>为什么要加「!」</strong>，尝试了一下把「!」去掉，在初始化器中就会报错（好像是因为需要在初始化器中进行初始化）。</p>
  </li>
  <li>
    <p>获取屏幕尺寸，参考<a href="http://stackoverflow.com/questions/24110762/swift-determine-ios-screen-size">Swift: Determine iOS Screen size [duplicate]</a>。</p>
  </li>
  <li>
    <p>不写修饰符的时候默认是let</p>
  </li>
  <li>
    <p>UIPageControl参考官方网页：<a href="https://developer.apple.com/reference/uikit/uipagecontrol">UIPageControl</a></p>
  </li>
  <li>view的init</li>
</ol>

<h2 id="launchscreenstoryboard和mainstoryboard">LaunchScreen.storyboard和Main.storyboard</h2>
<p>给view上加了个图片。为了适合各种机型加了约束。目前先不搞UI所以先白板，<strong>此处留坑等以后来补。</strong></p>

<h2 id="infoplist">info.plist</h2>
<p>添加了两项：<code>UIStatusBarHidden</code>和<code>UIViewControllerBasedStatusBarAppearance</code>，但在目前的项目中名称上有些许变化，应该是版本更新带来的区别。</p>

<p>两者都是对状态栏的隐藏（<del>状态栏是指什么？</del> 状态栏<code>(UIStatusBar)</code>指iPhone/iPad/iPod屏幕顶部用于显示网络、时间和电量等的、高度为20点的控件。），但有区别：</p>

<ul>
  <li>
    <p><code>Status bar is initially hidden</code>：APP「启动」时的状态栏是否隐藏</p>
  </li>
  <li>
    <p><code>View controller-based status bar appearance</code>：APP「运行」时的状态栏是否隐藏</p>
  </li>
  <li>
    <p>参考：<a href="http://www.cnblogs.com/alby/p/4859537.html">[iOS]关于状态栏(UIStatusBar)的若干问题</a></p>
  </li>
</ul>

<h1 id="20170513--20170514">2017.05.13 &amp; 2017.05.14</h1>
<h2 id="新建group以及文件">新建group以及文件</h2>
<ol>
  <li>创建<code>Home/Controller</code>，以及Camera的group；</li>
  <li>创建文件<code>kiwiCam/kiwiCam/Home/Controller/HomeViewController</code>，并在<code>Main.storyboard</code>中的那个场景（scene）的class改成这个<code>HomeViewController</code>，给它添加一个<code>NavigationControllerScene</code>（好久不练手都忘了怎么添加了，找了一会才找到）。把之前的<code>ViewController</code>删掉。
    <ul>
      <li><strong>疑问：为啥要给home页添加一个<code>NavigationControllerScene</code>呢？</strong>  <br />
猜测：后续有功能需要用到。</li>
    </ul>
  </li>
</ol>

<blockquote>
  <p><strong>一个困惑：</strong>  <br />
在目前的xcode中我只发现了新建group而没有新建文件夹，而这个group建立好了之后是不会在真正的项目的文件夹（finder）中显示出实体的，而如果直接在项目的文件夹中建立新文件夹又不会在xcode的工程项目的导航中显示（应该是因为没有关联上吧），所以要怎么搞才能使xcode项目导航的层次和真正的文件夹中的层次一致呢？</p>
</blockquote>

<h2 id="global文件夹">Global文件夹</h2>
<p>有一个桥接文件<code>Capture-Bridging-Header.h</code>，应该是因为项目使用了swift和oc两种语言。里面广告的部分就不管了，但还有「分享」（目前决定分享平台是QQ、微信和微博）和其他功能的部分，<strong>现在先留个坑等回来填</strong>，先不管oc的部分，把swift的部分搞清楚再说。</p>

<h2 id="关于core-data">关于core data</h2>
<p><del>上学期学了，忘了，再学一遍吧……</del><br />
专门开了篇文章来翻译官网的<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreData/index.html#//apple_ref/doc/uid/TP40001075-CH2-SW1">Core Data Programming Guide</a>，翻完第一部分发现这个应用<strong>似乎不需要用到Core Data啊</strong>（Capture好像确实没用Core Data），所以暂时放一放。</p>

<h1 id="20170509">2017.05.09</h1>
<h2 id="对开源项目capture的分析">对开源项目Capture的分析</h2>
<p>项目地址：<a href="https://github.com/dulingkang/Capture">Capture</a>。一个一个group来分析好了：</p>

<ol>
  <li>
    <p>该项目是使用swift语言写的，我也打算用swift来写</p>
  </li>
  <li>
    <p>裁剪功能是使用的第三方提供的，语言是oc</p>
  </li>
  <li>
    <p>Home中主要实现了主界面的view和controller</p>
  </li>
  <li>
    <p>SeniorBeauty是选择好图片后的三个高级功能：模糊、贴图、滤镜；以及该界面相关的MVC（其实功能有四个，还有一个就是裁剪）</p>
  </li>
  <li>
    <p>Camera是实现实时滤镜的，目前我不打算做这个功能，就直接调用自带的相机拍个照就可以了</p>
  </li>
  <li>
    <p>Global，目前我的理解是定义了一些全局使用的view和model</p>
  </li>
  <li>Lib
    <ul>
      <li>OpenSource中应该是用来分享的接口</li>
      <li>（百度广告就不提了）剩下<strong>一堆framework，不知道是什么，查一查之后再来更新</strong></li>
    </ul>
  </li>
  <li>
    <p>Util，应该是实用工具吧，但是<strong>不知道那四个文件用来干嘛的，一样，查完搞清楚之后回来更新</strong></p>
  </li>
  <li>Resource里主要是用到的图片资源和info.plist。该项目基本没有使用storyboard，纯手工写view，我也打算这么写了</li>
</ol>

<h2 id="目前的计划">目前的计划</h2>
<ol>
  <li>
    <p>这次就不作妖了，人家怎么写的就搞清楚之后自己写起来，不在大方向上随便瞎改了</p>
  </li>
  <li>
    <p>就从第一个commit开始看，一步步来写吧</p>
  </li>
</ol>

<p>-TBC-</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Core Data Programming Guide中文版（能坚持翻译到哪一部分我也不知道，目前状态：坑）]]></title>
    <link href="http://www.fenglians.com/blog/2017/05/13/core-data-programming-guidezhong-wen-ban/"/>
    <updated>2017-05-13T21:23:18+08:00</updated>
    <id>http://www.fenglians.com/blog/2017/05/13/core-data-programming-guidezhong-wen-ban</id>
    <content type="html"><![CDATA[<blockquote>
  <p>废话：挖坑，不知道什么时候能填完（或者还能不能填完了）。先坑着。  <br />
为了学习开始搞起翻译，水平非常烂，欢迎指教。  <br />
““内是不知道该怎么翻的</p>
</blockquote>

<h2 id="开始">开始</h2>
<h3 id="core-data是什么">Core Data是什么？</h3>
<p>Core Data是一个框架，用来在自己的应用中管理模型层对象（model layer objects）。对那些涉及对象生命周期和对象图表管理（包括持久化）的一般任务，它提供了广泛而自动的解决方案。<br />
<!--more--><br />
Core Data能减少为了支持模型层而写的百分之50至70的代码量。这主要是因为以下内建特性，而不需要人工去实现、测试并优化了：<br />
    - 改变了撤销与重做的追踪和内建管理，而不只是基本的文本编辑。<br />
    - 维护了改变的传播，包括对象间关系一致性的维护。<br />
    - 对象的懒加载，”部分的已实现未来（缺点）”，并使用写时复制数据共享的方式来减少开销。<br />
    - 适合数值的自动认可。管理的对象扩展了标准键值编码的认可方法来确保个体数值落在可接受范围内，因此能使值的组合具有意义。<br />
    - 模式迁移工具简化了模式的变化并可以高效地进行就地模式迁移。<br />
    - 应用控制层的可选整合来支持用户界面的同步。<br />
    - 在内存和用户界面中分组、过滤及组织数据。<br />
    - 在外部数据仓库中存储对象的自动化支持。<br />
    - 复杂的查询编译。不需要写SQL语句，可以通过使用读取请求来连接一个NSPredicate对象，以此进行复杂的查询。<br />
    - 使用版本追踪和乐观锁来支持自动的多写冲突的解决。<br />
    - 有效整合了macOS和iOS的工具链。</p>
<blockquote>
  <p>NOTE  <br />
为了方便和明确，本文档使用了一个雇员的数据库式的例子。它代表了一个丰富而容易理解的问题域。但是，Core Data框架并不限制于数据库式或者C/S行为的应用。这个框架和矢量图应用的基础一样有用，比如Skech或者像Keynote这样的演示应用。</p>
</blockquote>

<h3 id="创建一个托管对象模型managed-object-model">创建一个托管对象模型（Managed Object Model）</h3>

<p>-TBC-</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在Objective-C项目中使用Swift类... To Be Continued...]]></title>
    <link href="http://www.fenglians.com/blog/2017/03/26/ru-he-zai-objective-cxiang-mu-zhong-shi-yong-swiftlei-dot-dot-dot-to-be-continued-dot-dot-dot/"/>
    <updated>2017-03-26T21:12:57+08:00</updated>
    <id>http://www.fenglians.com/blog/2017/03/26/ru-he-zai-objective-cxiang-mu-zhong-shi-yong-swiftlei-dot-dot-dot-to-be-continued-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>最近在写（抄）一个ios上的相机应用，项目用OC写的，抄到一个swift类时发现不能用，搜索了一下，根据这篇文章解决了问题，记录一下：<a href="http://jrjian.github.io/2016/03/10/embed-swift-to-oc/">如何在 Objective-C 项目中使用 Swift 类</a></p>

<p>目前还没有遇到新的问题，如果有就回来记录一下.</p>

<p>-TBC-</p>
]]></content>
  </entry>
  
</feed>
